SET SERVEROUTPUT ON
DECLARE
EMPNO NUMBER:=20;
BEGIN
DBMS_OUTPUT.PUT_LINE('EMPNO IS '||EMPNO);
END;

DECLARE
EMPNO NUMBER:=100;
BEGIN
DBMS_OUTPUT.PUT_LINE('EMP NO IS '|| EMPNO);
END;



DECLARE
EMPNO NUMBER;          --WE HAVE DECLARE HERE A VARIABLE
BEGIN
EMPNO:=1500;           --WE HAVE INITIALIZE A VARIABLE HERE
DBMS_OUTPUT.PUT_LINE('EMP NO'||EMPNO);
END;



DECLARE 
EMPNAME VARCHAR2(10):='RAJ';
BEGIN
DBMS_OUTPUT.PUT_LINE('EMP NAME IS '||EMPNAME);
END;


DECLARE
EMPNAME VARCHAR2(10):='HEMANT';
EMPSAL NUMBER(7):=85000;
EMPAGE VARCHAR2(2):=25;
BEGIN
DBMS_OUTPUT.PUT_LINE('EMPLOYEE NAME= '||EMPNAME);
DBMS_OUTPUT.PUT_LINE('EMPLOYEE AGE=  '||EMPAGE);
DBMS_OUTPUT.PUT_LINE('EMPLOYEE SALARY= '||EMPSAL);
END;



DECLARE 
STUDNAME VARCHAR2(10);
BEGIN
 STUDNAME:='Rakesh';
 DBMS_OUTPUT.PUT_LINE('STUDENT NAME IS  '||UPPER(STUDNAME));
END; 

DECLARE 
EMPNAME VARCHAR2(40);
EMPCITY VARCHAR2(40);
EMPSTATE VARCHAR2(30);
BEGIN
 EMPNAME:='Rahul';
 EMPCITY:='NASHIK';
 EMPSTATE:='MAHARASHTRA';
DBMS_OUTPUT.PUT_LINE('EMP NAME IS '||UPPER(EMPNAME));
DBMS_OUTPUT.PUT_LINE('EMP CITY IS '||LOWER(EMPCITY));
DBMS_OUTPUT.PUT_LINE('EMP STATE IS '||INITCAP(EMPSTATE));
END;

DECLARE
EMPNAME VARCHAR2(20);
EMPSTATE VARCHAR2(10);
BEGIN
EMPNAME:='AJAY';
EMPSTATE:='KARNATAKA';
DBMS_OUTPUT.PUT_LINE('EMP NAME IS '||EMPNAME);
END;



DECLARE 
DW NUMBER(10):=10;
BEGIN
DBMS_OUTPUT.PUT_LINE('THE VALUES OF D IS '||TO_CHAR(DW));
END;


SET SERVEROUTPUT ON
DECLARE
EMPNAME VARCHAR2(10);
BEGIN
EMPNAME :='RAKESH';
DBMS_OUTPUT.PUT_LINE('EMPNAME IS '||EMPNAME);
END;




---------------------------------------------------------------------------------
SET SERVEROUTPUT ON
DECLARE
EMPNAME VARCHAR2(20);
BEGIN
 EMPNAME:='RAKESH';
DBMS_OUTPUT.PUT_LINE('THE EMP NAME IS '||EMPNAME); 
END;
------------------------------------------
DECLARE
NUM1 NUMBER :=&N01;
NUM2 NUMBER :=&NO2;
BEGIN
  IF NUM1>NUM2 THEN
  DBMS_OUTPUT.PUT_LINE('NUM1 IS GREATEST '||NUM1);
  ELSE
  DBMS_OUTPUT.PUT_LINE('NUM2 IS GREATEST '||NUM2);
END IF;
END;

---------------------------------------------------------------
--IDENTIFY NUMBER IS POSITIVE OR NEGATIVE
DECLARE
NUM1 NUMBER :=&NO1;
BEGIN
 IF NUM1>0 THEN
  DBMS_OUTPUT.PUT_LINE('THE NUMBER IS POSITIVE '||NUM1);
 ELSIF NUM1<0 THEN
 DBMS_OUTPUT.PUT_LINE('THE NUMBER IS NEGATIVE '||NUM1);
 ELSIF NUM1=0 THEN
 DBMS_OUTPUT.PUT_LINE('THE NUMBER IS ZERO '||NUM1);
ELSE
 DBMS_OUTPUT.PUT_LINE('INVALID NUMBER');
 END IF;
END;

----------------------------------------------------------------------------
--CALCULATE PROFIT LOSS
DECLARE
SELLING_PRICE NUMBER :=&SP;
COST_PRICE NUMBER :=&CP;
PROFIT_LOSS NUMBER;
BEGIN
 PROFIT_LOSS:=SELLING_PRICE-COST_PRICE;
 
 IF SELLING_PRICE>COST_PRICE THEN
 DBMS_OUTPUT.PUT_LINE('PROFIT IS '||PROFIT_LOSS);
 
 ELSIF SELLING_PRICE<COST_PRICE THEN
 DBMS_OUTPUT.PUT_LINE('LOSS IS '||PROFIT_LOSS);
ELSE
 DBMS_OUTPUT.PUT_LINE('INVALID ENTRY');
 END IF;
END;

-----------------------------------------------------------------------------
--IDENTIFY NUMBER IS EVEN OR ODD
DECLARE
NUM1 NUMBER:=&NUMBER;
BEGIN
 IF MOD(NUM1,2)=0 THEN
 DBMS_OUTPUT.PUT_LINE('EVEN NUMBER '||NUM1);
  ELSE
    IF MOD(NUM1,2)!=0 THEN
     DBMS_OUTPUT.PUT_LINE('ODD NUMBER '||NUM1);
END IF;
END IF;
 END;
 
 --------------------------------------------------------
-- IDENTIFY BETWEEN 3 NUMBERS THE GREATEST ONE

DECLARE
 NUM1 NUMBER:=&N01;
 NUM2 NUMBER :=&NO2;
 NUM3 NUMBER :=&NO3;
BEGIN
  IF NUM1>NUM2  --TRUE
   THEN
     IF NUM1>NUM3 THEN
      DBMS_OUTPUT.PUT_LINE('NUM1 IS GREATEST '||NUM1);
      ELSE
       DBMS_OUTPUT.PUT_LINE('NUM3 IS GREATEST '||NUM3);
       END IF;
 ELSIF NUM2>NUM3
  THEN
    DBMS_OUTPUT.PUT_LINE('NUM2 IS GREATEST '||NUM2);
    
    
END IF;
END;

----------------------------------------------------------------------
--IDENTIFY LEAP YEAR OR NOT
DECLARE
YEAR NUMBER:=&YEAR;
BEGIN 
 IF MOD(YEAR,4)=0 AND MOD(YEAR,100)!=0 OR MOD(YEAR,400)=0 THEN
  DBMS_OUTPUT.PUT_LINE('THIS IS LEAP YEAR '||YEAR);
 ELSE
  DBMS_OUTPUT.PUT_LINE(' NOT LEAP YEAR '||YEAR);
 END IF; 
END;

------------------------------------------------


--4.Write a program to check whether a number is divisible by 5 and 11 or not.


DECLARE
NUM1 NUMBER:=&NUM1;
BEGIN
 IF MOD(NUM1,5)=0 AND MOD(NUM1,11)=0 THEN
  DBMS_OUTPUT.PUT_LINE('NUMBER IS DIVISIBLE BY BOTH '||NUM1);
 
 ELSIF  MOD(NUM1,5)!=0 AND MOD(NUM1,11)=0 THEN
 DBMS_OUTPUT.PUT_LINE('NUMBER IS ONLY DIVISIBLE BY 11 '||NUM1);
 
 ELSIF MOD(NUM1,5)=0 AND MOD(NUM1,11)!=0 THEN
 DBMS_OUTPUT.PUT_LINE('NUMBER IS DIVISIBLE BY 5 '||NUM1);
ELSE
  DBMS_OUTPUT.PUT_LINE('NUMBER IS NOT DIVISIBLE BY 5 NOR 11 '||NUM1);
END IF;
 
END;

--14.Write a  program to input angles of a triangle and check 
--whether triangle is valid or not
DECLARE
ANG1 NUMBER:=&ANG1;
ANG2 NUMBER:= &ANG2;
ANG3 NUMBER :=&ANG3;
TOTAL NUMBER;
BEGIN
  TOTAL:=(ANG1+ANG2+ANG3);
  
  IF TOTAL=180 AND ANG1>0 AND ANG2>0 AND ANG3>0 THEN
  DBMS_OUTPUT.PUT_LINE('ITS A TRIANGLE ');
  ELSE
    DBMS_OUTPUT.PUT_LINE('ITS NOT FORM  A VALID  TRIANGLE ');
END IF;
END;
-------------------------------------------------------------------------------
--16.Write a program to check whether the triangle is equilateral,
--isosceles or scalene triangle.
DECLARE
ANG1 NUMBER :=&ANG1;
ANG2 NUMBER :=&ANG2;
ANG3 NUMBER :=&ANG3;
BEGIN
 IF (ANG1=ANG2) AND (ANG2=ANG3) AND (ANG3=ANG1) THEN
  DBMS_OUTPUT.PUT_LINE('EQUILATERAL TRIANGLE ');
 ELSIF ANG1=ANG2 OR ANG2=ANG3 OR ANG3=ANG1 THEN
   DBMS_OUTPUT.PUT_LINE('ISOCELES TRIANGLE ');
ELSE
   DBMS_OUTPUT.PUT_LINE('SCALENE TRIANGLE ');
END IF;
END;

--10.	Write a  program to check whether a character is uppercase or lowercase alphabet

SET SERVEROUTPUT ON
DECLARE
TEXT VARCHAR2(20):='&TEXT';
BEGIN
   IF TEXT BETWEEN 'A' AND 'Z' THEN
    DBMS_OUTPUT.PUT_LINE('THE CAPITAL '||TEXT);
   ELSIF TEXT BETWEEN 'a' AND 'z' THEN
    DBMS_OUTPUT.PUT_LINE('THE SMALL '||TEXT);
  ELSE
   DBMS_OUTPUT.PUT_LINE('INVALID '||TEXT);
   
END IF;
END;
